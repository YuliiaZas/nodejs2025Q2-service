openapi: 3.0.0
paths:
  /user:
    post:
      description: This endpoint creates a new user with a login and password.
      operationId: UsersController_addUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "201":
          description: The user has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message:
                    - login must be longer than or equal to 3 characters
                    - password must be longer than or equal to 4 characters
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: &a1
        - access-token: []
      summary: Create a new user
      tags: &a2
        - Users
    get:
      description: This endpoint retrieves a list of all users.
      operationId: UsersController_getUsers
      parameters: []
      responses:
        "200":
          description: A list of users has been successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: *a1
      summary: Get all users
      tags: *a2
  /user/{id}:
    get:
      description: This endpoint retrieves a user by their ID.
      operationId: UsersController_getUser
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the user (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        "200":
          description: The user has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: User not found. The user with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: User with ID 123e4567-e89b-12d3-a456-426614174000 not found
                  error: Not Found
      security: *a1
      summary: Get a user by ID
      tags: *a2
    put:
      description: This endpoint updates the password of an existing user. The old
        password must be provided for verification.
      operationId: UsersController_updateUserPassword
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the user (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordDto"
      responses:
        "200":
          description: The user password has been successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "403":
          description: Forbidden. The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                example:
                  statusCode: 403
                  message: Current password is incorrect
                  error: Forbidden
        "404":
          description: User not found. The user with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: User with ID 123e4567-e89b-12d3-a456-426614174000 not found
                  error: Not Found
      security: *a1
      summary: Update user password
      tags: *a2
    delete:
      description: This endpoint deletes a user by their ID.
      operationId: UsersController_deleteUser
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the user (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        "204":
          description: The user has been successfully deleted.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: User not found. The user with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: User with ID 123e4567-e89b-12d3-a456-426614174000 not found
                  error: Not Found
      security: *a1
      summary: Delete a user by ID
      tags: *a2
  /artist:
    post:
      description: This endpoint creates a new artist with a name and a flag if the
        artist has a Grammy Award.
      operationId: ArtistsController_addArtist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "201":
          description: The artist has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message:
                    - name should not be empty
                    - grammy must be a boolean value
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: &a3
        - access-token: []
      summary: Create a new artist
      tags: &a4
        - Artists
    get:
      description: This endpoint retrieves a list of all artists.
      operationId: ArtistsController_getArtists
      parameters: []
      responses:
        "200":
          description: A list of artists has been successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Artist"
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: *a3
      summary: Get all artists
      tags: *a4
  /artist/{id}:
    get:
      description: This endpoint retrieves an artist by their ID.
      operationId: ArtistsController_getArtist
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the artist (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174001
            type: string
      responses:
        "200":
          description: The artist has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Artist not found. The artist with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 not found
                  error: Not Found
      security: *a3
      summary: Get an artist by ID
      tags: *a4
    put:
      description: This endpoint updates an artist by their ID with new data.
      operationId: ArtistsController_updateArtist
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the artist (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174001
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArtistDto"
      responses:
        "200":
          description: The The user password has been successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Artist not found. The artist with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 not found
                  error: Not Found
      security: *a3
      summary: Update an artist by ID
      tags: *a4
    delete:
      description: This endpoint deletes an artist by their ID.
      operationId: ArtistsController_deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the artist (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174001
            type: string
      responses:
        "204":
          description: The artist has been successfully deleted.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Artist not found. The artist with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 not found
                  error: Not Found
      security: *a3
      summary: Delete an artist by ID
      tags: *a4
  /album:
    post:
      description: This endpoint creates a new album with a name, year, and an
        optional artist ID.
      operationId: AlbumsController_addAlbum
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "201":
          description: The album has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message:
                    - name should not be empty
                    - year must not be greater than 2025
                    - year must not be less than 1900
                    - year must be an integer number
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "422":
          description: Artist not exist. The artist with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 does not exist
                  error: Not Found
      security: &a5
        - access-token: []
      summary: Create a new album
      tags: &a6
        - Albums
    get:
      description: This endpoint retrieves a list of all albums.
      operationId: AlbumsController_getAlbums
      parameters: []
      responses:
        "200":
          description: A list of albums has been successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Album"
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: *a5
      summary: Get all albums
      tags: *a6
  /album/{id}:
    get:
      description: This endpoint retrieves an album by its ID.
      operationId: AlbumsController_getAlbum
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the album (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174002
            type: string
      responses:
        "200":
          description: The album has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Album not found. The album with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Album with ID 123e4567-e89b-12d3-a456-426614174002 not found
                  error: Not Found
      security: *a5
      summary: Get an album by ID
      tags: *a6
    put:
      description: This endpoint updates an existing album by its ID with new data.
      operationId: AlbumsController_updateAlbum
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the album (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174002
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlbumDto"
      responses:
        "200":
          description: The The user password has been successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Album not found. The album with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Album with ID 123e4567-e89b-12d3-a456-426614174002 not found
                  error: Not Found
        "422":
          description: Artist not exist. The artist with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 does not exist
                  error: Not Found
      security: *a5
      summary: Update an album by ID
      tags: *a6
    delete:
      description: This endpoint deletes an album by its ID.
      operationId: AlbumsController_deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the album (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174002
            type: string
      responses:
        "204":
          description: The album has been successfully deleted.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Album not found. The album with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Album with ID 123e4567-e89b-12d3-a456-426614174002 not found
                  error: Not Found
      security: *a5
      summary: Delete an album by ID
      tags: *a6
  /track:
    post:
      description: This endpoint creates a new track with a name, year, and an
        optional artist ID.
      operationId: TracksController_addTrack
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "201":
          description: The track has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message:
                    - name should not be empty
                    - year must not be greater than 2025
                    - year must not be less than 1900
                    - year must be an integer number
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "422":
          description: Artist or album not exist. The artist or album with the specified
            ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 does not exist
                  error: Not Found
      security: &a7
        - access-token: []
      summary: Create a new track
      tags: &a8
        - Tracks
    get:
      description: This endpoint retrieves a list of all tracks.
      operationId: TracksController_getTracks
      parameters: []
      responses:
        "200":
          description: A list of tracks has been successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: *a7
      summary: Get all tracks
      tags: *a8
  /track/{id}:
    get:
      description: This endpoint retrieves an track by its ID.
      operationId: TracksController_getTrack
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the track (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174003
            type: string
      responses:
        "200":
          description: The track has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Track not found. The track with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Track with ID 123e4567-e89b-12d3-a456-426614174003 not found
                  error: Not Found
      security: *a7
      summary: Get an track by ID
      tags: *a8
    put:
      description: This endpoint updates an existing track by its ID with new data.
      operationId: TracksController_updateTrack
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the track (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174003
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTrackDto"
      responses:
        "200":
          description: The The user password has been successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Track not found. The track with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Track with ID 123e4567-e89b-12d3-a456-426614174003 not found
                  error: Not Found
        "422":
          description: Artist or album not exist. The artist or album with the specified
            ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 does not exist
                  error: Not Found
      security: *a7
      summary: Update an track by ID
      tags: *a8
    delete:
      description: This endpoint deletes an track by its ID.
      operationId: TracksController_deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the track (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174003
            type: string
      responses:
        "204":
          description: The track has been successfully deleted.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Track not found. The track with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Track with ID 123e4567-e89b-12d3-a456-426614174003 not found
                  error: Not Found
      security: *a7
      summary: Delete an track by ID
      tags: *a8
  /favs:
    get:
      description: This endpoint retrieves all the favorites.
      operationId: FavoritesController_getAllFavorites
      parameters: []
      responses:
        "200":
          description: The The favorites has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favorites"
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
      security: &a9
        - access-token: []
      summary: Get all favorites
      tags: &a10
        - Favorites
  /favs/artist/{id}:
    post:
      description: This endpoint adds a artist to the favorites.
      operationId: FavoritesController_addArtistToFavorites
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the artist (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174001
            type: string
      responses:
        "201":
          description: The artist has been successfully added to favorites.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddedFavorite"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "422":
          description: Artist not exist. The artist with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 does not exist
                  error: Not Found
      security: *a9
      summary: Add a artist to favorites
      tags: *a10
    delete:
      description: This endpoint removes a artist from the favorites.
      operationId: FavoritesController_removeArtistFromFavorites
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the artist (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174001
            type: string
      responses:
        "204":
          description: The artist has been successfully removed from favorites.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Artist not found in favorites. The artist with the specified ID
            does not exist in favorites.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Artist with ID 123e4567-e89b-12d3-a456-426614174001 not found in
                    favorites
                  error: Not Found
      security: *a9
      summary: Remove a artist from favorites
      tags: *a10
  /favs/album/{id}:
    post:
      description: This endpoint adds a album to the favorites.
      operationId: FavoritesController_addAlbumToFavorites
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the album (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174002
            type: string
      responses:
        "201":
          description: The album has been successfully added to favorites.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddedFavorite"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "422":
          description: Album not exist. The album with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Album with ID 123e4567-e89b-12d3-a456-426614174002 does not exist
                  error: Not Found
      security: *a9
      summary: Add a album to favorites
      tags: *a10
    delete:
      description: This endpoint removes a album from the favorites.
      operationId: FavoritesController_removeAlbumFromFavorites
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the album (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174002
            type: string
      responses:
        "204":
          description: The album has been successfully removed from favorites.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Album not found in favorites. The album with the specified ID does
            not exist in favorites.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Album with ID 123e4567-e89b-12d3-a456-426614174002 not found in
                    favorites
                  error: Not Found
      security: *a9
      summary: Remove a album from favorites
      tags: *a10
  /favs/track/{id}:
    post:
      description: This endpoint adds a track to the favorites.
      operationId: FavoritesController_addTrackToFavorites
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the track (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174003
            type: string
      responses:
        "201":
          description: The track has been successfully added to favorites.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddedFavorite"
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "422":
          description: Track not exist. The track with the specified ID does not exist.
          content:
            application/json:
              schema:
                example:
                  statusCode: 422
                  message: Track with ID 123e4567-e89b-12d3-a456-426614174003 does not exist
                  error: Not Found
      security: *a9
      summary: Add a track to favorites
      tags: *a10
    delete:
      description: This endpoint removes a track from the favorites.
      operationId: FavoritesController_removeTrackFromFavorites
      parameters:
        - name: id
          required: true
          in: path
          description: The unique identifier of the track (UUID v4 format)
          schema:
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174003
            type: string
      responses:
        "204":
          description: The track has been successfully removed from favorites.
        "400":
          description: Bad Request. The ID property is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message: Invalid ID format. Must be a UUID v4
                  error: Bad Request
        "401":
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Unauthorized. The user is not authenticated or the token is invalid.
                  error: Unauthorized
        "404":
          description: Track not found in favorites. The track with the specified ID does
            not exist in favorites.
          content:
            application/json:
              schema:
                example:
                  statusCode: 404
                  message: Track with ID 123e4567-e89b-12d3-a456-426614174003 not found in
                    favorites
                  error: Not Found
      security: *a9
      summary: Remove a track from favorites
      tags: *a10
  /auth/signup:
    post:
      description: This endpoint allows a new user to sign up with a login and password.
      operationId: AuthController_signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "201":
          description: The user has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message:
                    - login must be longer than or equal to 3 characters
                    - password must be longer than or equal to 4 characters
                  error: Bad Request
      summary: Sign up a new user
      tags: &a11
        - Auth
  /auth/login:
    post:
      description: This endpoint allows an existing user to log in with their login
        and password.
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "200":
          description: Tokens has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Bad Request. The input data is invalid.
          content:
            application/json:
              schema:
                example:
                  statusCode: 400
                  message:
                    - login must be longer than or equal to 3 characters
                    - password must be longer than or equal to 4 characters
                  error: Bad Request
        "403":
          description: Forbidden. The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                example:
                  statusCode: 403
                  message: Login or password is incorrect
                  error: Forbidden
      summary: Log in an existing user
      tags: *a11
  /auth/refresh:
    post:
      description: This endpoint allows a user to refresh their session using a
        refresh token.
      operationId: AuthController_refresh
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshDto"
      responses:
        "200":
          description: Tokens has been successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Refresh token not provided
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Refresh token not provided
                  error: Unauthorized
        "403":
          description: Forbidden. The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                example:
                  statusCode: 403
                  message: Refresh token is invalid or expired
                  error: Forbidden
      summary: Refresh user session
      tags: *a11
info:
  title: Home Library Service
  description: API for managing music albums, artists, and tracks
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    access-token:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: Authorization
      description: Enter JWT access token
      in: header
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: The login of the user
          example: john_doe
          minLength: 3
          maxLength: 20
        password:
          type: string
          description: The password of the user
          example: password
          minLength: 4
          maxLength: 100
      required:
        - login
        - password
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        login:
          type: string
          example: john_doe
        version:
          type: number
          example: 1
        createdAt:
          format: int64
          type: integer
          example: 1716927665136
        updatedAt:
          format: int64
          type: integer
          example: 1716927665136
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: The old password of the user
          example: password
        newPassword:
          type: string
          description: The new password of the user
          example: NewPassword
          minLength: 4
          maxLength: 100
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the artist
          example: The Beatles
        grammy:
          type: boolean
          description: Specifies if the artist has a Grammy Award
          example: false
      required:
        - name
        - grammy
    Artist:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174001
        name:
          type: string
          example: The Beatles
        grammy:
          type: boolean
          description: Specifies if the artist has a Grammy Award
          example: false
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the artist
          example: The Beatles
        grammy:
          type: boolean
          description: Specifies if the artist has a Grammy Award
          example: false
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the album
          example: Abbey Road
        year:
          type: number
          description: The year the album was released
          example: 1969
        artistId:
          type: string
          description: The artist ID associated with the album
          nullable: true
          format: uuid
      required:
        - name
        - year
    Album:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174002
        name:
          type: string
          example: Abbey Road
        year:
          type: number
          description: The year the album was released
          example: 1969
        artistId:
          type: string
          description: The artist ID associated with the album
          nullable: true
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174001
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the album
          example: Abbey Road
        year:
          type: number
          description: The year the album was released
          example: 1969
        artistId:
          type: string
          description: The artist ID associated with the album
          nullable: true
          format: uuid
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the track
          example: Come Together
        duration:
          type: number
          description: The duration of the track in seconds
          example: 201
        artistId:
          type: string
          description: The artist ID associated with the track
          nullable: true
          format: uuid
        albumId:
          type: string
          description: The album ID associated with the track
          nullable: true
          format: uuid
      required:
        - name
        - duration
    Track:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174003
        name:
          type: string
          example: Come Together
        duration:
          type: number
          example: 201
        artistId:
          type: string
          description: The artist ID associated with the track
          nullable: true
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174001
        albumId:
          type: string
          description: The album ID associated with the track
          nullable: true
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174002
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the track
          example: Come Together
        duration:
          type: number
          description: The duration of the track in seconds
          example: 201
        artistId:
          type: string
          description: The artist ID associated with the track
          nullable: true
          format: uuid
        albumId:
          type: string
          description: The album ID associated with the track
          nullable: true
          format: uuid
    Favorites:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: "#/components/schemas/Artist"
        albums:
          type: array
          items:
            $ref: "#/components/schemas/Album"
        tracks:
          type: array
          items:
            $ref: "#/components/schemas/Track"
    AddedFavorite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174001
          description: The unique identifier of the added favorite entity
        type:
          type: string
          enum:
            - artist
            - album
            - track
          example: artist
          description: The type of the added favorite entity
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          format: token
          description: JWT access token for authenticated requests
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          format: token
          description: JWT refresh token for obtaining new access tokens
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    RefreshDto:
      type: object
      properties:
        refreshToken:
          type: string
          description: JWT refresh token for obtaining new access tokens
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          format: token
      required:
        - refreshToken
